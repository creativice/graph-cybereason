import { createIntegrationEntity } from '@jupiterone/integration-sdk-core';
import { Malware } from '../../types';
import { Entities } from '../constants';

function getMalwareKey(id: string, machineName: string): string {
  return `malware:${machineName}:${id}`;
}

export function createMalwareEntity(data: Malware) {
  return createIntegrationEntity({
    entityData: {
      source: data,
      assign: {
        _class: Entities.MALWARE._class,
        _type: Entities.MALWARE._type,
        _key: getMalwareKey(data.guid, data.machineName),
        name: data.guid,
        guid: data.guid,
        timestamp: data.timestamp,
        type: data.type,
        elementType: data.elementType,
        machineName: data.machineName,
        status: data.status,
        needsAttention: data.needsAttention,
        referenceGuid: data.referenceGuid,
        referenceElementType: data.referenceElementType,
        score: data.score,
        detectionValue: data.detectionValue,
        detectionValueType: data.detectionValueType,
        malwareClass: data.malwareDataModel['@class'],
        malwareDetectionName: data.malwareDataModel.detectionName,
        malwareFilePath: data.malwareDataModel.filePath,
        schedulerScan: data.schedulerScan,
        category: 'malware',
        open: data.status === 'Detected' ? true : false,
        severity: data.score.toString(), // placeholder, require some mapping probably
        numericSeverity: data.score,
      },
    },
  });
}
